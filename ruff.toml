target-version = "py311"
line-length = 120
indent-width = 4


lint.select = [
    "A",        # Проверка синтаксиса с помощью flake8-builtins
    "C4",       # Проверка списковых включений с помощью flake8-comprehensions
    "C90",      # Проверка сложности кода McCabe
    "E",        # Ошибки в коде
    "F",        # Проверка с помощью Pyflakes
    "G",        # Проверка форматирования логирования с помощью flake8-logging-format
    "I",        # Проверка импортов
    "N",        # Проверка именования переменных и функций
    "Q",        # Проверка кавычек в коде с помощью flake8-quotes
    "W",        # Предупреждения стиля кода
    "ANN",      # Проверка аннотаций
    "ISC",      # Игнорирование self-инкремента
    "RUF",      # Обновление Python версии с помощью pyupgrade
    "RET",      # Проверка return типов
    "UP",       # Обновления пакетов
    "PIE",      # Проверка пустых строк в конце файла
    "PYI",      # Проверка файлов .pyi (типовые аннотации)
    "SIM",      # Упрощение кода с помощью flake8-simplify
    "COM",      # Проверка запятых в коде с помощью flake8-commas
    "PT",       # Стиль pytest с помощью flake8-pytest-style
    "SLF",      # Проверка наличия служебных методов slots
    "SLOT",     # Проверка наличия слотов в классах
    "TID",      # Проверка идентификаторов в коде
    "TCH",      # Проверка обработчиков исключений
    "INT",      # Проверка типов интерфейсов и абстрактных классов
    "ARG",      # Проверка неиспользуемых аргументов функций с помощью flake8-unused-arguments
    "TD",       # Поиск TO DO комментариев с помощью flake8-todos
    "PL",       # Проверка с помощью Pylint
    "FIX",      # Фиксы, рекомендации по улучшению кода от Pylint
    "ERA",      # Ошибки времени выполнения, обнаруженные Pylint
    "FLY",      # Рекомендации по улучшению кода от Pylint
    "PERF"      # Рекомендации по оптимизации производительности от Pylint
]

lint.ignore = [
    "A003",     # Использование ключевых слов, которые перекрывают встроенные функции Python
    "ANN001",   # Отсутствует аннотация типа для переменной
    "ANN002",   # Отсутствует аннотация типа для *args
    "ANN003",   # Отсутствует аннотация типа для *kwargs
    "ANN101",   # Отсутствует аннотация типа для self в методе
    "ANN102",   # Отсутствует аннотация типа для cls в классовом методе
    "D203",     # Отсутствует пустая строка между определением класса и его doc string
    "D211",     # Не допускаются пустые строки перед документацией класса
    "D213",     # Многострочное краткое описание документации должно начинаться со второй строки
    "D400",     # Первая строка должна заканчиваться точкой
    "D407",     # Пропущена пунктирная линия после раздела ("name")
    "D406",     # Имя раздела должно заканчиваться новой строкой ("name")
    "UP011",    # Ненужные скобки для декораторов
    "UP032",    # Используйте f-строку вместо вызова format
    "ISC002",   # Неявно объединенные строковые литералы на нескольких строках
    "PYI041",   # Предупреждение о неиспользуемых импортах в файлах .pyi (файлах объявления типов Python)
    "RUF001",   # Кириллические символы в строке
    "RUF002",   # Кириллические символы в докстринге
    "RUF003",   # Кириллические символы в комментарии
]

lint.fixable = ["ALL"]
lint.unfixable = []

exclude = [
    ".venv",
    "app\\migrations\\"
]
